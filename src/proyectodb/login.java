/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectodb;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samue
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public login() {
        initComponents();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_admin = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jb_ACliente = new javax.swing.JButton();
        jb_ACliente1 = new javax.swing.JButton();
        jb_ACliente2 = new javax.swing.JButton();
        jb_ACliente3 = new javax.swing.JButton();
        jb_ACliente4 = new javax.swing.JButton();
        jp_CrMoEl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_AMostrar = new javax.swing.JTable();
        jb_CrMoEl = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jd_CrMoEl = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jb_AInsertar = new javax.swing.JButton();
        jb_AModificar = new javax.swing.JButton();
        jb_AEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_nombreCorreo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jpf_password = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        jd_admin.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Insertar, Modificar, Eliminar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel3.setName(""); // NOI18N

        jb_ACliente.setText("Clientes");
        jb_ACliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AClienteActionPerformed(evt);
            }
        });

        jb_ACliente1.setText("Vendedores");
        jb_ACliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ACliente1ActionPerformed(evt);
            }
        });

        jb_ACliente2.setText("Tiendas");
        jb_ACliente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ACliente2ActionPerformed(evt);
            }
        });

        jb_ACliente3.setText("Productos");
        jb_ACliente3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ACliente3ActionPerformed(evt);
            }
        });

        jb_ACliente4.setText("Facturas");
        jb_ACliente4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ACliente4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_ACliente4, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_ACliente3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_ACliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_ACliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_ACliente, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jb_ACliente, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_ACliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_ACliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_ACliente3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_ACliente4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jp_CrMoEl.setBackground(new java.awt.Color(255, 255, 255));
        jp_CrMoEl.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        jt_AMostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jt_AMostrar);

        jb_CrMoEl.setText(".");
        jb_CrMoEl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_CrMoElActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_CrMoElLayout = new javax.swing.GroupLayout(jp_CrMoEl);
        jp_CrMoEl.setLayout(jp_CrMoElLayout);
        jp_CrMoElLayout.setHorizontalGroup(
            jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_CrMoElLayout.createSequentialGroup()
                .addGroup(jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_CrMoElLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp_CrMoElLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jb_CrMoEl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jp_CrMoElLayout.setVerticalGroup(
            jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_CrMoElLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_CrMoEl, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jButton5.setBackground(new java.awt.Color(255, 102, 102));
        jButton5.setText("Cerrar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_adminLayout = new javax.swing.GroupLayout(jd_admin.getContentPane());
        jd_admin.getContentPane().setLayout(jd_adminLayout);
        jd_adminLayout.setHorizontalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jp_CrMoEl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jd_adminLayout.setVerticalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jp_CrMoEl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("asdasd");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jb_AInsertar.setText("Insertar");
        jb_AInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AInsertarActionPerformed(evt);
            }
        });

        jb_AModificar.setText("Modificar");
        jb_AModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AModificarActionPerformed(evt);
            }
        });

        jb_AEliminar.setText("Eliminar");
        jb_AEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jb_AEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_AModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_AInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jb_AInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_AModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_AEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_CrMoElLayout = new javax.swing.GroupLayout(jd_CrMoEl.getContentPane());
        jd_CrMoEl.getContentPane().setLayout(jd_CrMoElLayout);
        jd_CrMoElLayout.setHorizontalGroup(
            jd_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_CrMoElLayout.setVerticalGroup(
            jd_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\samue\\Downloads\\paizz.png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nombre/Correo Electrónico");

        jtf_nombreCorreo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Contraseña");

        jpf_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpf_passwordActionPerformed(evt);
            }
        });

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_nombreCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jpf_password, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(148, 148, 148))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(115, 115, 115)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_nombreCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpf_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //login de admin
        if (jtf_nombreCorreo.getText().equals("admin") || jpf_password.getPassword().equals("1234")) {
            this.setVisible(false);
            jd_admin.setModal(true);
            jd_admin.pack();
            jd_admin.setLocationRelativeTo(this);
            jd_admin.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jpf_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpf_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpf_passwordActionPerformed

    private void jb_AEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AEliminarActionPerformed
        if (botonA) {
            jd_CrMoEl.setVisible(false);
            jb_CrMoEl.setText("Eliminar");
            crud2 = 3;
            switch (crud) {
                case 1:
                    listaC = cd.ListarClientes();
                    if (!listaC.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Id");
                        tm.addColumn("Nombre");
                        tm.addColumn("Correo Electronico");
                        tm.addColumn("Password");
                        for (CLIENTE fi : listaC) {
                            Object[] temp = new Object[4];
                            temp[0] = fi.getId();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getCorreoElectronico();
                            temp[3] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay clientes!");
                    }
                    break;
                case 2:
                    listaV = vd.ListarVendedor();
                    if (!listaV.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Id");
                        tm.addColumn("Nombre");
                        tm.addColumn("Password");
                        for (VENDEDOR fi : listaV) {
                            Object[] temp = new Object[4];
                            temp[0] = fi.getId();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay vendedores!");
                    }
                    break;
                case 3:
                    listaT = td.ListarTienda();
                    if (!listaT.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Id");
                        tm.addColumn("Nombre");
                        tm.addColumn("Correo Electronico");
                        tm.addColumn("Password");
                        for (TIENDA fi : listaT) {
                            Object[] temp = new Object[4];
                            temp[0] = fi.getId();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getUbicaciones();
                            temp[3] = fi.getHorario();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay Tiendas!");
                    }
                    break;
                case 4:
                    PRODUCTO pr = new PRODUCTO();
                    listaP = pd.ListarProductos();
                    if (!listaP.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("UPC");
                        tm.addColumn("Nombre");
                        tm.addColumn("Tamaño");
                        tm.addColumn("Embalaje");
                        tm.addColumn("Marca");
                        tm.addColumn("Tipo");
                        for (PRODUCTO fi : listaP) {
                            Object[] temp = new Object[6];
                            temp[0] = fi.getUpc();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getTamanio();
                            temp[3] = fi.getEmbalaje();
                            temp[4] = fi.getMarca();
                            temp[5] = fi.getTipo();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay clientes!");
                    }
                    break;
                default:
            }
        }
    }//GEN-LAST:event_jb_AEliminarActionPerformed

    private void jb_AInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AInsertarActionPerformed
        jb_CrMoEl.setText("Insertar");
        crud2 = 1;
        tm = new DefaultTableModel();
        Object[] temp;
        switch (crud) {
            case 1:
                tm.addColumn("Nombre");
                tm.addColumn("Correo Electronico");
                tm.addColumn("Password");
                temp = new Object[4];
                tm.addRow(temp);
                break;
            case 2:
                tm.addColumn("Nombre");
                tm.addColumn("Password");
                temp = new Object[2];
                tm.addRow(temp);
                break;
            case 3:
                tm.addColumn("Nombre");
                tm.addColumn("Ubicaciones");
                tm.addColumn("Horario");
                temp = new Object[3];
                tm.addRow(temp);
                break;
            case 4:
                tm.addColumn("UPC");
                tm.addColumn("Nombre");
                tm.addColumn("Tamanio");
                tm.addColumn("Embalaje");
                tm.addColumn("Marca");
                tm.addColumn("Tipo");
                temp = new Object[6];
                tm.addRow(temp);
                break;
            default:
        }
        jt_AMostrar.setModel(tm);
        jt_AMostrar.setEditingRow(0);
        jt_AMostrar.setEnabled(true);
        jd_CrMoEl.setVisible(false);

    }//GEN-LAST:event_jb_AInsertarActionPerformed

    private void jb_AClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AClienteActionPerformed
        crud = 1;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jb_AClienteActionPerformed

    private void jb_ACliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ACliente1ActionPerformed
        crud = 2;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jb_ACliente1ActionPerformed

    private void jb_ACliente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ACliente2ActionPerformed
        crud = 3;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jb_ACliente2ActionPerformed

    private void jb_ACliente3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ACliente3ActionPerformed
        crud = 4;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jb_ACliente3ActionPerformed

    private void jb_ACliente4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ACliente4ActionPerformed
        crud = 5;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jb_ACliente4ActionPerformed

    private void jb_AModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AModificarActionPerformed
        // primero lista todo
        jd_CrMoEl.setVisible(false);
        if (botonA) {
            jb_CrMoEl.setText("Modificar");
            crud2 = 2;
            switch (crud) {
                case 1:
                    listaC = cd.ListarClientes();
                    if (!listaC.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Correo Electronico");
                        tm.addColumn("Password");
                        for (CLIENTE fi : listaC) {
                            Object[] temp = new Object[3];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getCorreoElectronico();
                            temp[2] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay clientes!");
                    }
                    break;

                case 2:
                    listaV = vd.ListarVendedor();
                    if (!listaV.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Password");
                        for (VENDEDOR fi : listaV) {
                            Object[] temp = new Object[2];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay vendedores!");
                    }
                    break;
                case 3:
                    listaT = td.ListarTienda();
                    if (!listaT.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Ubicaciones");
                        tm.addColumn("Horario");
                        for (TIENDA fi : listaT) {
                            Object[] temp = new Object[3];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getUbicaciones();
                            temp[2] = fi.getHorario();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay Tiendas!");
                    }
                    break;
                case 4:
                    listaP = pd.ListarProductos();
                    if (!listaP.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Tamaño");
                        tm.addColumn("Embalaje");
                        tm.addColumn("Marca");
                        tm.addColumn("Tipo");
                        for (PRODUCTO fi : listaP) {
                            Object[] temp = new Object[5];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getTamanio();
                            temp[2] = fi.getEmbalaje();
                            temp[3] = fi.getMarca();
                            temp[4] = fi.getTipo();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay Productos!");
                    }
                    break;
                default:
            }
        }
    }//GEN-LAST:event_jb_AModificarActionPerformed

    private void jb_CrMoElActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_CrMoElActionPerformed
        if (botonA) {
            switch (crud) {
                case 1:
                    CLIENTE cl = new CLIENTE();
                    switch (crud2) {

                        case 1:
                            cl.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                            cl.setCorreoElectronico((String) jt_AMostrar.getValueAt(0, 1));
                            cl.setPassword((String) jt_AMostrar.getValueAt(0, 2));
                            cd.InsertarCliente(cl);
                            break;
                        case 2:
                            for (int i = 0; i < listaC.size(); i++) {
                                if (listaC.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaC.get(i).getCorreoElectronico().equals(jt_AMostrar.getValueAt(i, 1))
                                        && listaC.get(i).getPassword().equals(jt_AMostrar.getValueAt(i, 2))) {

                                } else {
                                    cl.setId(listaC.get(i).getId());
                                    cl.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    cl.setCorreoElectronico((String) jt_AMostrar.getValueAt(0, 1));
                                    cl.setPassword((String) jt_AMostrar.getValueAt(0, 2));
                                    cd.ModificarCliente(cl);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    cd.EliminarCliente(listaC.get(ele).getId());
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;

                    }

                case 2:
                    VENDEDOR ven = new VENDEDOR();
                    switch (crud2) {
                        case 1:
                            ven.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                            ven.setPassword((String) jt_AMostrar.getValueAt(0, 1));
                            vd.InsertarVendedor(ven);
                            break;
                        case 2:
                            for (int i = 0; i < listaV.size(); i++) {
                                if (listaV.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaV.get(i).getPassword().equals(jt_AMostrar.getValueAt(i, 1))) {

                                } else {
                                    ven.setId(listaV.get(i).getId());
                                    ven.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    ven.setPassword((String) jt_AMostrar.getValueAt(0, 1));
                                    vd.ModificarVendedor(ven);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    vd.EliminarVendedor(listaV.get(ele).getId());
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;
                    }
                    break;
                case 3:
                    TIENDA ti = new TIENDA();
                    switch (crud2) {
                        case 1:
                            ti.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                            ti.setUbicaciones((String) jt_AMostrar.getValueAt(0, 1));
                            ti.setHorario((String) jt_AMostrar.getValueAt(0, 2));
                            td.InsertarTienda(ti);
                            break;
                        case 2:
                            for (int i = 0; i < listaT.size(); i++) {
                                if (listaT.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaT.get(i).getUbicaciones().equals(jt_AMostrar.getValueAt(i, 1))
                                        && listaT.get(i).getHorario().equals(jt_AMostrar.getValueAt(i, 2))) {

                                } else {
                                    ti.setId(listaT.get(i).getId());
                                    ti.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    ti.setUbicaciones((String) jt_AMostrar.getValueAt(0, 1));
                                    ti.setHorario((String) jt_AMostrar.getValueAt(0, 2));
                                    td.ModificarTienda(ti);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    td.EliminarTienda(listaT.get(ele).getId());
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;
                    }
                    break;
                case 4:
                    PRODUCTO pr = new PRODUCTO();
                    switch (crud2) {
                        case 1:
                            listaP = pd.ListarProductos();
                            boolean check = true;
                            for (PRODUCTO pi : listaP) {
                                if (jt_AMostrar.getValueAt(0, 0).equals(pi.getUpc())) {
                                    check = false;
                                }
                            }
                            if (check) {
                                pr.setUpc((String) jt_AMostrar.getValueAt(0, 0));
                                pr.setNombre((String) jt_AMostrar.getValueAt(0, 1));
                                pr.setTamanio((String) jt_AMostrar.getValueAt(0, 2));
                                pr.setEmbalaje((String) jt_AMostrar.getValueAt(0, 3));
                                pr.setMarca((String) jt_AMostrar.getValueAt(0, 4));
                                pr.setTipo((String) jt_AMostrar.getValueAt(0, 5));
                                pd.InsertarProductos(pr);
                            } else {
                                JOptionPane.showMessageDialog(this, "Esta UPC ya esta siendo usada");
                            }
                            break;

                        case 2:
                            for (int i = 0; i < listaP.size(); i++) {
                                if (listaP.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaP.get(i).getTamanio().equals(jt_AMostrar.getValueAt(i, 1))
                                        && listaP.get(i).getEmbalaje().equals(jt_AMostrar.getValueAt(i, 2))
                                        && listaP.get(i).getMarca().equals(jt_AMostrar.getValueAt(i, 3))
                                        && listaP.get(i).getTipo().equals(jt_AMostrar.getValueAt(i, 4))) {

                                } else {
                                    pr.setUpc(listaP.get(i).getUpc());
                                    pr.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    pr.setTamanio((String) jt_AMostrar.getValueAt(0, 1));
                                    pr.setEmbalaje((String) jt_AMostrar.getValueAt(0, 3));
                                    pr.setMarca((String) jt_AMostrar.getValueAt(0, 4));
                                    pr.setTipo((String) jt_AMostrar.getValueAt(0, 5));
                                    pd.ModificarProducto(pr);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    pd.EliminarProducto(listaP.get(ele).getUpc());
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;
                    }
                    break;
                default:
            }
        }
    }//GEN-LAST:event_jb_CrMoElActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_ACliente;
    private javax.swing.JButton jb_ACliente1;
    private javax.swing.JButton jb_ACliente2;
    private javax.swing.JButton jb_ACliente3;
    private javax.swing.JButton jb_ACliente4;
    private javax.swing.JButton jb_AEliminar;
    private javax.swing.JButton jb_AInsertar;
    private javax.swing.JButton jb_AModificar;
    private javax.swing.JButton jb_CrMoEl;
    private javax.swing.JDialog jd_CrMoEl;
    private javax.swing.JDialog jd_admin;
    private javax.swing.JPanel jp_CrMoEl;
    private javax.swing.JPasswordField jpf_password;
    private javax.swing.JTable jt_AMostrar;
    private javax.swing.JTextField jtf_nombreCorreo;
    // End of variables declaration//GEN-END:variables
    int crud = -1, crud2 = -1;
    DefaultTableModel tm = new DefaultTableModel();
    boolean botonA = false;
    CLIENTESdao cd = new CLIENTESdao();
    VENDEDORdao vd = new VENDEDORdao();
    TIENDAdao td = new TIENDAdao();
    PRODUCTOdao pd = new PRODUCTOdao();
    ArrayList<CLIENTE> listaC = new ArrayList();
    ArrayList<VENDEDOR> listaV = new ArrayList();
    ArrayList<TIENDA> listaT = new ArrayList();
    ArrayList<PRODUCTO> listaP = new ArrayList();
}
