/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectodb;

import com.sun.jdi.connect.spi.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author samue
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public login() {
        initComponents();
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_admin = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jb_ACliente3 = new javax.swing.JButton();
        jp_com = new javax.swing.JPanel();
        jl_com = new javax.swing.JLabel();
        jp_tie = new javax.swing.JPanel();
        jl_tie = new javax.swing.JLabel();
        jp_ven = new javax.swing.JPanel();
        jl_ven = new javax.swing.JLabel();
        jp_cl = new javax.swing.JPanel();
        jl_cl = new javax.swing.JLabel();
        jb_Vistas = new javax.swing.JButton();
        jp_CrMoEl = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_AMostrar = new javax.swing.JTable();
        jb_CrMoEl = new javax.swing.JButton();
        bt_bitacora = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jd_CrMoEl = new javax.swing.JDialog();
        jPanel5 = new javax.swing.JPanel();
        jb_AInsertar = new javax.swing.JButton();
        jb_AModificar = new javax.swing.JButton();
        jb_AEliminar = new javax.swing.JButton();
        jd_client = new javax.swing.JDialog();
        jp_comprar = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_AMostrar1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jl_comprar = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jd_Vistas = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jb_Inventario_de_Productos = new javax.swing.JButton();
        jb_Compras_por_Cliente = new javax.swing.JButton();
        jb_Historial_de_Ventas_por_Cliente = new javax.swing.JButton();
        jb_Los_20_Productos_mas_Vendidos_en_cada_Tienda = new javax.swing.JButton();
        jb_Los_20_Productos_mas_Vendidos_en_cada_Pais = new javax.swing.JButton();
        jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±o = new javax.swing.JButton();
        jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_Pepsi = new javax.swing.JButton();
        jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_leche = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_Vistas = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jd_bitacora = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        jt_bitacora = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_nombreCorreo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jpf_password = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        jd_admin.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Insertar, Modificar, Eliminar"));
        jPanel3.setName(""); // NOI18N

        jb_ACliente3.setBackground(new java.awt.Color(255, 255, 255));
        jb_ACliente3.setText("Productos");
        jb_ACliente3.setBorderPainted(false);
        jb_ACliente3.setFocusPainted(false);
        jb_ACliente3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_ACliente3ActionPerformed(evt);
            }
        });

        jp_com.setBackground(new java.awt.Color(255, 255, 255));

        jl_com.setText("           Comprar");
        jl_com.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_comMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_comLayout = new javax.swing.GroupLayout(jp_com);
        jp_com.setLayout(jp_comLayout);
        jp_comLayout.setHorizontalGroup(
            jp_comLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_com, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp_comLayout.setVerticalGroup(
            jp_comLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_com, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
        );

        jp_tie.setBackground(new java.awt.Color(255, 255, 255));
        jp_tie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_tieMouseClicked(evt);
            }
        });

        jl_tie.setText("           Tiendas");
        jl_tie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_tieMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_tieLayout = new javax.swing.GroupLayout(jp_tie);
        jp_tie.setLayout(jp_tieLayout);
        jp_tieLayout.setHorizontalGroup(
            jp_tieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_tie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp_tieLayout.setVerticalGroup(
            jp_tieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_tie, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        jp_ven.setBackground(new java.awt.Color(255, 255, 255));
        jp_ven.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_venMouseClicked(evt);
            }
        });

        jl_ven.setText("       Vendedores");
        jl_ven.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_venMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_venLayout = new javax.swing.GroupLayout(jp_ven);
        jp_ven.setLayout(jp_venLayout);
        jp_venLayout.setHorizontalGroup(
            jp_venLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_ven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp_venLayout.setVerticalGroup(
            jp_venLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_ven, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
        );

        jp_cl.setBackground(new java.awt.Color(255, 255, 255));
        jp_cl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_clMouseClicked(evt);
            }
        });

        jl_cl.setText("           Clientes");
        jl_cl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_clMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_clLayout = new javax.swing.GroupLayout(jp_cl);
        jp_cl.setLayout(jp_clLayout);
        jp_clLayout.setHorizontalGroup(
            jp_clLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_cl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jp_clLayout.setVerticalGroup(
            jp_clLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jl_cl, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
        );

        jb_Vistas.setBackground(new java.awt.Color(255, 255, 255));
        jb_Vistas.setText("Vistas");
        jb_Vistas.setBorderPainted(false);
        jb_Vistas.setFocusPainted(false);
        jb_Vistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_VistasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jb_Vistas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp_cl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp_ven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp_tie, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp_com, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_ACliente3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jp_cl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jp_ven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jp_tie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_ACliente3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jp_com, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_Vistas, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jp_CrMoEl.setBackground(new java.awt.Color(255, 255, 255));
        jp_CrMoEl.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jt_AMostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jt_AMostrar);

        jb_CrMoEl.setText(".");
        jb_CrMoEl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_CrMoElActionPerformed(evt);
            }
        });

        bt_bitacora.setText("BITACORA");
        bt_bitacora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_bitacoraMouseClicked(evt);
            }
        });
        bt_bitacora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_bitacoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_CrMoElLayout = new javax.swing.GroupLayout(jp_CrMoEl);
        jp_CrMoEl.setLayout(jp_CrMoElLayout);
        jp_CrMoElLayout.setHorizontalGroup(
            jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_CrMoElLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jp_CrMoElLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(jp_CrMoElLayout.createSequentialGroup()
                        .addComponent(jb_CrMoEl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_bitacora)
                        .addGap(20, 20, 20))))
        );
        jp_CrMoElLayout.setVerticalGroup(
            jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_CrMoElLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jp_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_CrMoElLayout.createSequentialGroup()
                        .addComponent(jb_CrMoEl, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_CrMoElLayout.createSequentialGroup()
                        .addComponent(bt_bitacora)
                        .addGap(15, 15, 15))))
        );

        jButton5.setBackground(new java.awt.Color(255, 102, 102));
        jButton5.setText("Cerrar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(153, 153, 255));
        jButton8.setText("Cerrar Sesi√≥n");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_adminLayout = new javax.swing.GroupLayout(jd_admin.getContentPane());
        jd_admin.getContentPane().setLayout(jd_adminLayout);
        jd_adminLayout.setHorizontalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jp_CrMoEl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jd_adminLayout.setVerticalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jp_CrMoEl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("asdasd");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jb_AInsertar.setText("Insertar");
        jb_AInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AInsertarActionPerformed(evt);
            }
        });

        jb_AModificar.setText("Modificar");
        jb_AModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AModificarActionPerformed(evt);
            }
        });

        jb_AEliminar.setText("Eliminar");
        jb_AEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_AEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jb_AEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_AModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_AInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jb_AInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_AModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_AEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd_CrMoElLayout = new javax.swing.GroupLayout(jd_CrMoEl.getContentPane());
        jd_CrMoEl.getContentPane().setLayout(jd_CrMoElLayout);
        jd_CrMoElLayout.setHorizontalGroup(
            jd_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_CrMoElLayout.setVerticalGroup(
            jd_CrMoElLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jp_comprar.setBackground(new java.awt.Color(255, 255, 255));

        jt_AMostrar1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jt_AMostrar1);

        javax.swing.GroupLayout jp_comprarLayout = new javax.swing.GroupLayout(jp_comprar);
        jp_comprar.setLayout(jp_comprarLayout);
        jp_comprarLayout.setHorizontalGroup(
            jp_comprarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 561, Short.MAX_VALUE)
            .addGroup(jp_comprarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jp_comprarLayout.createSequentialGroup()
                    .addGap(19, 19, 19)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        jp_comprarLayout.setVerticalGroup(
            jp_comprarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 408, Short.MAX_VALUE)
            .addGroup(jp_comprarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jp_comprarLayout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Seleccionar Productos");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Ver Carrito");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(204, 255, 204));

        jl_comprar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_comprar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_comprarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jl_comprar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jl_comprar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setText("Return");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 102, 102));
        jButton6.setText("Cerrar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_clientLayout = new javax.swing.GroupLayout(jd_client.getContentPane());
        jd_client.getContentPane().setLayout(jd_clientLayout);
        jd_clientLayout.setHorizontalGroup(
            jd_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_clientLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jd_clientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jp_comprar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jd_clientLayout.setVerticalGroup(
            jd_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_clientLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jd_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_clientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jp_comprar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jd_clientLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel9.setBackground(new java.awt.Color(204, 255, 255));

        jb_Inventario_de_Productos.setText("Inventario de Productos");
        jb_Inventario_de_Productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Inventario_de_ProductosActionPerformed(evt);
            }
        });

        jb_Compras_por_Cliente.setText("Compras por Cliente");
        jb_Compras_por_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Compras_por_ClienteActionPerformed(evt);
            }
        });

        jb_Historial_de_Ventas_por_Cliente.setText("Historial de Ventas por Cleinte");
        jb_Historial_de_Ventas_por_Cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Historial_de_Ventas_por_ClienteActionPerformed(evt);
            }
        });

        jb_Los_20_Productos_mas_Vendidos_en_cada_Tienda.setText("Los 20 Productos mas Vendidos en cada Tienda");
        jb_Los_20_Productos_mas_Vendidos_en_cada_Tienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Los_20_Productos_mas_Vendidos_en_cada_TiendaActionPerformed(evt);
            }
        });

        jb_Los_20_Productos_mas_Vendidos_en_cada_Pais.setText("Los 20 Productos mas Vendidos en cada Pais");
        jb_Los_20_Productos_mas_Vendidos_en_cada_Pais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Los_20_Productos_mas_Vendidos_en_cada_PaisActionPerformed(evt);
            }
        });

        jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±o.setText("Las 5 Tiendas con mas ventas en lo que va de a√±o");
        jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±o.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±oActionPerformed(evt);
            }
        });

        jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_Pepsi.setText("Las Tiendas que vende Coca-Cola mas que Pepsi");
        jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_Pepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_PepsiActionPerformed(evt);
            }
        });

        jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_leche.setText("Los 3 principales tipos de producto que los clientes compran ademas de la leche");
        jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_leche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_lecheActionPerformed(evt);
            }
        });

        jt_Vistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jt_Vistas);

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setText("Return");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 102, 102));
        jButton7.setText("Cerrar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jb_Los_20_Productos_mas_Vendidos_en_cada_Pais, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_Inventario_de_Productos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jb_Compras_por_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_Historial_de_Ventas_por_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_Los_20_Productos_mas_Vendidos_en_cada_Tienda, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±o, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_Pepsi, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_leche, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addGap(23, 23, 23))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_Los_20_Productos_mas_Vendidos_en_cada_Tienda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Historial_de_Ventas_por_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Compras_por_Cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Inventario_de_Productos, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±o, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Los_20_Productos_mas_Vendidos_en_cada_Pais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_Pepsi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_leche, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jd_VistasLayout = new javax.swing.GroupLayout(jd_Vistas.getContentPane());
        jd_Vistas.getContentPane().setLayout(jd_VistasLayout);
        jd_VistasLayout.setHorizontalGroup(
            jd_VistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_VistasLayout.setVerticalGroup(
            jd_VistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jt_bitacora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jt_bitacora);

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jd_bitacoraLayout = new javax.swing.GroupLayout(jd_bitacora.getContentPane());
        jd_bitacora.getContentPane().setLayout(jd_bitacoraLayout);
        jd_bitacoraLayout.setHorizontalGroup(
            jd_bitacoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_bitacoraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jd_bitacoraLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jd_bitacoraLayout.setVerticalGroup(
            jd_bitacoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_bitacoraLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nombre/Correo Electr√≥nico");

        jtf_nombreCorreo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Contrase√±a");

        jpf_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpf_passwordActionPerformed(evt);
            }
        });

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_nombreCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jpf_password, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(148, 148, 148))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(115, 115, 115)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_nombreCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpf_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //login de admin
        if (jtf_nombreCorreo.getText().equals("admin") || jpf_password.getPassword().equals("1234")) {
            this.setVisible(false);
            jp_cl.setVisible(true);
            jp_com.setVisible(true);
            jp_tie.setVisible(true);
            jp_ven.setVisible(true);
            jd_admin.setModal(true);
            jd_admin.pack();
            jd_admin.setLocationRelativeTo(this);
            jd_admin.setVisible(true);
            clienteCheck = false;
            vendedorCheck = false;

        } else {
            jt_AMostrar.setModel(new DefaultTableModel());
            listaC = cd.ListarClientes();
            boolean bandera = false;
            for (CLIENTE c : listaC) {
                if (jtf_nombreCorreo.getText().equals(c.getNombre()) || jtf_nombreCorreo.getText().equals(c.getCorreoElectronico())) {
                    if (jpf_password.getText().equals(c.getPassword())) {
                        this.setVisible(false);
                        jd_client.setModal(true);
                        jd_client.pack();
                        jd_client.setLocationRelativeTo(this);
                        jd_client.setVisible(true);
                        clienteCheck = true;
                        bandera = true;
                        vendedorCheck = false;
                    } else {
                        JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
                    }
                }
            }
            listaV = vd.ListarVendedor();
            if (!bandera) {
                for (VENDEDOR v : listaV) {
                    if (jtf_nombreCorreo.getText().equals(v.getNombre())) {
                        if (jpf_password.getText().equals(v.getPassword())) {
                            this.setVisible(false);
                            jp_cl.setVisible(false);
                            jp_com.setVisible(false);
                            jp_tie.setVisible(false);
                            jp_ven.setVisible(false);
                            jd_admin.setModal(true);
                            jd_admin.pack();
                            jd_admin.setLocationRelativeTo(this);
                            jd_admin.setVisible(true);
                            vendedorCheck = true;

                        } else {
                            JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jpf_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpf_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpf_passwordActionPerformed

    private void jb_AEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AEliminarActionPerformed
        if (botonA) {
            jd_CrMoEl.setVisible(false);
            jb_CrMoEl.setText("Eliminar");
            crud2 = 3;
            switch (crud) {
                case 1:
                    listaC = cd.ListarClientes();
                    if (!listaC.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Id");
                        tm.addColumn("Nombre");
                        tm.addColumn("Correo Electronico");
                        tm.addColumn("Password");
                        for (CLIENTE fi : listaC) {
                            Object[] temp = new Object[4];
                            temp[0] = fi.getId();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getCorreoElectronico();
                            temp[3] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay clientes!");
                    }
                    break;
                case 2:
                    listaV = vd.ListarVendedor();
                    if (!listaV.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Id");
                        tm.addColumn("Nombre");
                        tm.addColumn("Password");
                        for (VENDEDOR fi : listaV) {
                            Object[] temp = new Object[4];
                            temp[0] = fi.getId();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay vendedores!");
                    }
                    break;
                case 3:
                    listaT = td.ListarTienda();
                    if (!listaT.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Id");
                        tm.addColumn("Nombre");
                        tm.addColumn("Correo Electronico");
                        tm.addColumn("Password");
                        for (TIENDA fi : listaT) {
                            Object[] temp = new Object[4];
                            temp[0] = fi.getId();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getUbicaciones();
                            temp[3] = fi.getHorario();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay Tiendas!");
                    }
                    break;
                case 4:
                    PRODUCTO pr = new PRODUCTO();
                    listaP = pd.ListarProductos();
                    if (!listaP.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("UPC");
                        tm.addColumn("Nombre");
                        tm.addColumn("Tama√±o");
                        tm.addColumn("Embalaje");
                        tm.addColumn("Marca");
                        tm.addColumn("Tipo");
                        for (PRODUCTO fi : listaP) {
                            Object[] temp = new Object[6];
                            temp[0] = fi.getUpc();
                            temp[1] = fi.getNombre();
                            temp[2] = fi.getTamanio();
                            temp[3] = fi.getEmbalaje();
                            temp[4] = fi.getMarca();
                            temp[5] = fi.getTipo();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);
                        jt_AMostrar.setEditingColumn(0);
                        jt_AMostrar.setEditingColumn(1);
                        jt_AMostrar.setEditingColumn(2);
                        jt_AMostrar.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay clientes!");
                    }
                    break;
                default:
            }
        }
    }//GEN-LAST:event_jb_AEliminarActionPerformed

    private void jb_AInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AInsertarActionPerformed
        jb_CrMoEl.setText("Insertar");
        crud2 = 1;
        tm = new DefaultTableModel();
        Object[] temp;
        switch (crud) {
            case 1:
                tm.addColumn("Nombre");
                tm.addColumn("Correo Electronico");
                tm.addColumn("Password");
                temp = new Object[4];
                tm.addRow(temp);
                break;
            case 2:
                tm.addColumn("Nombre");
                tm.addColumn("Password");
                temp = new Object[2];
                tm.addRow(temp);
                break;
            case 3:
                tm.addColumn("Nombre");
                tm.addColumn("Ubicaciones");
                tm.addColumn("Horario");
                temp = new Object[3];
                tm.addRow(temp);
                break;
            case 4:
                tm.addColumn("UPC");
                tm.addColumn("Nombre");
                tm.addColumn("Tamanio");
                tm.addColumn("Embalaje");
                tm.addColumn("Marca");
                tm.addColumn("Tipo");
                temp = new Object[6];
                tm.addRow(temp);
                break;
            default:
        }
        jt_AMostrar.setModel(tm);
        jt_AMostrar.setEditingRow(0);
        jt_AMostrar.setEnabled(true);
        jd_CrMoEl.setVisible(false);

    }//GEN-LAST:event_jb_AInsertarActionPerformed

    private void jb_ACliente3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_ACliente3ActionPerformed
        crud = 4;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jb_ACliente3ActionPerformed

    private void jb_AModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_AModificarActionPerformed
        // primero lista todo
        jd_CrMoEl.setVisible(false);
        if (botonA) {
            jb_CrMoEl.setText("Modificar");
            crud2 = 2;
            switch (crud) {
                case 1:
                    listaC = cd.ListarClientes();
                    if (!listaC.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Correo Electronico");
                        tm.addColumn("Password");
                        for (CLIENTE fi : listaC) {
                            Object[] temp = new Object[3];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getCorreoElectronico();
                            temp[2] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay clientes!");
                    }
                    break;

                case 2:
                    listaV = vd.ListarVendedor();
                    if (!listaV.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Password");
                        for (VENDEDOR fi : listaV) {
                            Object[] temp = new Object[2];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getPassword();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay vendedores!");
                    }
                    break;
                case 3:
                    listaT = td.ListarTienda();
                    if (!listaT.isEmpty()) {

                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Ubicaciones");
                        tm.addColumn("Horario");
                        for (TIENDA fi : listaT) {
                            Object[] temp = new Object[3];
                            temp[0] = fi.getNombre();
                            temp[1] = fi.getUbicaciones();
                            temp[2] = fi.getHorario();
                            tm.addRow(temp);
                        }
                        jt_AMostrar.setModel(tm);
                        jt_AMostrar.setEnabled(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay Tiendas!");
                    }
                    break;
                case 4:
                    int vendedorId = 0;
                    listaP = pd.ListarProductos();
                    if (!listaP.isEmpty()) {
                        tm = new DefaultTableModel();
                        tm.addColumn("Nombre");
                        tm.addColumn("Tama√±o");
                        tm.addColumn("Embalaje");
                        tm.addColumn("Marca");
                        tm.addColumn("Tipo");
                        if (vendedorCheck) {
                            listaV = vd.ListarVendedor();
                            listaVP = vpd.ListarVendedor_Producto();
                            for (VENDEDOR vi : listaV) {
                                if (vi.getNombre().equals(jtf_nombreCorreo.getText())) {
                                    vendedorId = vi.getId();
                                }
                            }
                            for (VENDEDOR_PRODUCTO vpi : listaVP) {
                                for (PRODUCTO fi : listaP) {
                                    if (fi.getUpc().equals(vpi.getProducto_id()) && vpi.getVendedor_id() == vendedorId) {
                                        Object[] temp = new Object[5];
                                        temp[0] = fi.getNombre();
                                        temp[1] = fi.getTamanio();
                                        temp[2] = fi.getEmbalaje();
                                        temp[3] = fi.getMarca();
                                        temp[4] = fi.getTipo();
                                        tm.addRow(temp);
                                    }
                                }
                            }

                        } else {
                            for (PRODUCTO fi : listaP) {
                                Object[] temp = new Object[5];
                                temp[0] = fi.getNombre();
                                temp[1] = fi.getTamanio();
                                temp[2] = fi.getEmbalaje();
                                temp[3] = fi.getMarca();
                                temp[4] = fi.getTipo();
                                tm.addRow(temp);
                            }
                            jt_AMostrar.setModel(tm);
                            jt_AMostrar.setEnabled(true);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "No hay Productos!");
                    }
                    break;
                default:
            }
        }
    }//GEN-LAST:event_jb_AModificarActionPerformed

    private void jb_CrMoElActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_CrMoElActionPerformed
        if (botonA) {
            switch (crud) {
                case 1:
                    CLIENTE cl = new CLIENTE();
                    switch (crud2) {

                        case 1:
                            cl.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                            cl.setCorreoElectronico((String) jt_AMostrar.getValueAt(0, 1));
                            cl.setPassword((String) jt_AMostrar.getValueAt(0, 2));
                            cd.InsertarCliente(cl);
                            break;
                        case 2:
                            for (int i = 0; i < listaC.size(); i++) {
                                if (listaC.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaC.get(i).getCorreoElectronico().equals(jt_AMostrar.getValueAt(i, 1))
                                        && listaC.get(i).getPassword().equals(jt_AMostrar.getValueAt(i, 2))) {

                                } else {
                                    cl.setId(listaC.get(i).getId());
                                    cl.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    cl.setCorreoElectronico((String) jt_AMostrar.getValueAt(0, 1));
                                    cl.setPassword((String) jt_AMostrar.getValueAt(0, 2));
                                    cd.ModificarCliente(cl);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    cd.EliminarCliente(listaC.get(ele).getId());
                                    tm = (DefaultTableModel) jt_AMostrar.getModel();
                                    tm.removeRow(ele);
                                    jt_AMostrar.setModel(tm);
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;

                    }
                    break;
                case 2:
                    VENDEDOR ven = new VENDEDOR();
                    switch (crud2) {
                        case 1:
                            ven.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                            ven.setPassword((String) jt_AMostrar.getValueAt(0, 1));
                            vd.InsertarVendedor(ven);
                            break;
                        case 2:
                            for (int i = 0; i < listaV.size(); i++) {
                                if (listaV.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaV.get(i).getPassword().equals(jt_AMostrar.getValueAt(i, 1))) {

                                } else {
                                    ven.setId(listaV.get(i).getId());
                                    ven.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    ven.setPassword((String) jt_AMostrar.getValueAt(0, 1));
                                    vd.ModificarVendedor(ven);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    vd.EliminarVendedor(listaV.get(ele).getId());
                                    tm = (DefaultTableModel) jt_AMostrar.getModel();
                                    tm.removeRow(ele);
                                    jt_AMostrar.setModel(tm);
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;
                    }
                    break;
                case 3:
                    TIENDA ti = new TIENDA();
                    switch (crud2) {
                        case 1:
                            ti.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                            ti.setUbicaciones((String) jt_AMostrar.getValueAt(0, 1));
                            ti.setHorario((String) jt_AMostrar.getValueAt(0, 2));
                            td.InsertarTienda(ti);
                            break;
                        case 2:
                            for (int i = 0; i < listaT.size(); i++) {
                                if (listaT.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaT.get(i).getUbicaciones().equals(jt_AMostrar.getValueAt(i, 1))
                                        && listaT.get(i).getHorario().equals(jt_AMostrar.getValueAt(i, 2))) {

                                } else {
                                    ti.setId(listaT.get(i).getId());
                                    ti.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    ti.setUbicaciones((String) jt_AMostrar.getValueAt(0, 1));
                                    ti.setHorario((String) jt_AMostrar.getValueAt(0, 2));
                                    td.ModificarTienda(ti);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    td.EliminarTienda(listaT.get(ele).getId());
                                    tm = (DefaultTableModel) jt_AMostrar.getModel();
                                    tm.removeRow(ele);
                                    jt_AMostrar.setModel(tm);
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;
                    }
                    break;
                case 4:
                    PRODUCTO pr = new PRODUCTO();
                    int vendedor_id = 0;
                    for (VENDEDOR vi : listaV) {
                        if (vi.getNombre().equals(jtf_nombreCorreo.getText())) {
                            vendedor_id = vi.getId();
                        }
                    }
                    switch (crud2) {
                        case 1:
                            listaP = pd.ListarProductos();
                            listaV = vd.ListarVendedor();
                            boolean check = true;
                            for (PRODUCTO pi : listaP) {
                                if (jt_AMostrar.getValueAt(0, 0).equals(pi.getUpc())) {
                                    check = false;
                                }
                            }
                            if (check) {
                                pr.setUpc((String) jt_AMostrar.getValueAt(0, 0));
                                pr.setNombre((String) jt_AMostrar.getValueAt(0, 1));
                                pr.setTamanio((String) jt_AMostrar.getValueAt(0, 2));
                                pr.setEmbalaje((String) jt_AMostrar.getValueAt(0, 3));
                                pr.setMarca((String) jt_AMostrar.getValueAt(0, 4));
                                pr.setTipo((String) jt_AMostrar.getValueAt(0, 5));
                                pd.InsertarProductos(pr);
                                if (vendedorCheck) {
                                    vpd.InsertarVendedor_Producto(vendedor_id, (String) jt_AMostrar.getValueAt(0, 0));
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Esta UPC ya esta siendo usada");
                            }
                            break;

                        case 2:
                            for (int i = 0; i < listaP.size(); i++) {
                                if (listaP.get(i).getNombre().equals(jt_AMostrar.getValueAt(i, 0))
                                        && listaP.get(i).getTamanio().equals(jt_AMostrar.getValueAt(i, 1))
                                        && listaP.get(i).getEmbalaje().equals(jt_AMostrar.getValueAt(i, 2))
                                        && listaP.get(i).getMarca().equals(jt_AMostrar.getValueAt(i, 3))
                                        && listaP.get(i).getTipo().equals(jt_AMostrar.getValueAt(i, 4))) {

                                } else {
                                    pr.setUpc(listaP.get(i).getUpc());
                                    pr.setNombre((String) jt_AMostrar.getValueAt(0, 0));
                                    pr.setTamanio((String) jt_AMostrar.getValueAt(0, 1));
                                    pr.setEmbalaje((String) jt_AMostrar.getValueAt(0, 3));
                                    pr.setMarca((String) jt_AMostrar.getValueAt(0, 4));
                                    pr.setTipo((String) jt_AMostrar.getValueAt(0, 5));
                                    pd.ModificarProducto(pr);
                                }
                            }
                            break;
                        case 3:
                            int ele = jt_AMostrar.getSelectedRow();
                            if (ele != -1) {
                                try {
                                    pd.EliminarProducto(listaP.get(ele).getUpc());
                                    tm = (DefaultTableModel) jt_AMostrar.getModel();
                                    tm.removeRow(ele);
                                    jt_AMostrar.setModel(tm);
                                } catch (SQLException ex) {
                                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            break;
                    }
                    break;
                default:
            }
        }
    }//GEN-LAST:event_jb_CrMoElActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        listaP = pd.ListarProductos();
        if (!listaP.isEmpty()) {
            jl_comprar.setText("    Agregar al Carrito");
            tm = new DefaultTableModel();
            tm.addColumn("UPC");
            tm.addColumn("Nombre");
            tm.addColumn("Tama√±o");
            tm.addColumn("Embalaje");
            tm.addColumn("Marca");
            tm.addColumn("Tipo");
            for (PRODUCTO fi : listaP) {
                Object[] temp = new Object[6];
                temp[0] = fi.getUpc();
                temp[1] = fi.getNombre();
                temp[2] = fi.getTamanio();
                temp[3] = fi.getEmbalaje();
                temp[4] = fi.getMarca();
                temp[5] = fi.getTipo();
                tm.addRow(temp);
            }
            jt_AMostrar1.setModel(tm);
            jt_AMostrar1.setEnabled(true);
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jl_comprarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_comprarMouseClicked
        if (jl_comprar.getText().equals("Agregar al Carrito")) {
            if (jt_AMostrar1.getSelectedRow() >= 0) {
                int[] rows = jt_AMostrar1.getSelectedRows();
                for (int i = 0; i < rows.length; i++) {
                    String upc = (String) jt_AMostrar1.getValueAt(rows[i], 0);
                    String nom = (String) jt_AMostrar1.getValueAt(rows[i], 1);
                    String tam = (String) jt_AMostrar1.getValueAt(rows[i], 2);
                    String emb = (String) jt_AMostrar1.getValueAt(rows[i], 3);
                    String mar = (String) jt_AMostrar1.getValueAt(rows[i], 4);
                    String tip = (String) jt_AMostrar1.getValueAt(rows[i], 5);
                    listaPC.add(new PRODUCTO(upc, nom, tam, emb, mar, tip));
                }
                JOptionPane.showMessageDialog(null, "Se han agregado al carrito");
            }
        } else {
            if (jt_AMostrar1.getRowCount() > 0) {
                String sql = "INSERT INTO FACTURA (numero, fecha, subtotal, ISV, total, cliente_id, tienda_id) VALUES (?,?,?,?,?,?,?)";
                try {
                    ConectarDB cn = new ConectarDB();
                    java.sql.Connection con = cn.conectar();
                    PreparedStatement ps;
                    ps = con.prepareStatement(sql);
                    int numfact = jtf_nombreCorreo.getText().length() + jt_AMostrar1.getRowCount() + jpf_password.getText().length() + counter;
                    ps.setInt(1, numfact);
                    Date fechaActual = new Date();
                    SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                    String fecha = formatoFecha.format(fechaActual);
                    ps.setString(2, fecha);
                    ps.setDouble(3, jt_AMostrar1.getRowCount() * 40.2);
                    ps.setDouble(4, 0.12);
                    ps.setDouble(5, jt_AMostrar1.getRowCount() * 40.2 * 1.12);
                    int idcliente = 16;
                    for (CLIENTE c : listaC) {
                        if (c.getNombre().equals(jtf_nombreCorreo.getText()) || c.getCorreoElectronico().equals(jtf_nombreCorreo.getText())) {
                            idcliente = c.getId();
                            break;
                        }
                    }
                    ps.setInt(6, idcliente);
                    ps.setInt(7, 1010);
                    ps.execute();
                    tm = (DefaultTableModel) jt_AMostrar1.getModel();
                    tm.setRowCount(0);
                    JOptionPane.showMessageDialog(null, "Fue comprado exitosamente");
                } catch (SQLException e) {
                    counter++;
                    e.printStackTrace();
                }
                for (PRODUCTO p : listaPC) {
                    String sql2 = "INSERT INTO DETALLE_FACTURA (producto_upc, factura_numero) VALUES (?,?)";
                    try {
                        ConectarDB cn = new ConectarDB();
                        java.sql.Connection con = cn.conectar();
                        PreparedStatement ps;
                        ps = con.prepareStatement(sql2);
                        int numfact = jtf_nombreCorreo.getText().length() + jt_AMostrar1.getRowCount() + jpf_password.getText().length() + counter;
                        ps.setString(1, p.getUpc());
                        ps.setInt(2, numfact);
                        ps.execute();
                    } catch (SQLException e) {
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "No hay productos en el carrito");
            }
        }
    }//GEN-LAST:event_jl_comprarMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        if (!listaPC.isEmpty()) {
            jl_comprar.setText("    Comprar Productos");
            tm = new DefaultTableModel();
            tm.addColumn("Nombre");
            tm.addColumn("Tama√±o");
            tm.addColumn("Embalaje");
            tm.addColumn("Marca");
            tm.addColumn("Tipo");
            for (PRODUCTO fi : listaPC) {
                Object[] temp = new Object[5];
                temp[0] = fi.getNombre();
                temp[1] = fi.getTamanio();
                temp[2] = fi.getEmbalaje();
                temp[3] = fi.getMarca();
                temp[4] = fi.getTipo();
                tm.addRow(temp);
            }
            jt_AMostrar1.setModel(tm);
            jt_AMostrar1.setEnabled(true);
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jl_comMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_comMouseClicked
        jd_admin.setVisible(false);
        jd_client.setModal(true);
        jd_client.pack();
        jd_client.setLocationRelativeTo(this);
        jd_client.setVisible(true);
    }//GEN-LAST:event_jl_comMouseClicked

    private void jl_tieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_tieMouseClicked
        crud = 3;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jl_tieMouseClicked

    private void jp_tieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_tieMouseClicked

    }//GEN-LAST:event_jp_tieMouseClicked

    private void jl_venMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_venMouseClicked
        crud = 2;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jl_venMouseClicked

    private void jp_venMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_venMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jp_venMouseClicked

    private void jl_clMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_clMouseClicked
        crud = 1;
        botonA = true;
        jd_CrMoEl.setModal(true);
        jd_CrMoEl.pack();
        jd_CrMoEl.setLocationRelativeTo(this);
        jd_CrMoEl.setVisible(true);
    }//GEN-LAST:event_jl_clMouseClicked

    private void jp_clMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_clMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jp_clMouseClicked

    private void jb_VistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_VistasActionPerformed
        jd_admin.setVisible(false);
        jd_Vistas.setModal(true);
        jd_Vistas.pack();
        jd_Vistas.setLocationRelativeTo(this);
        jd_Vistas.setVisible(true);
    }//GEN-LAST:event_jb_VistasActionPerformed

    private void jb_Inventario_de_ProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Inventario_de_ProductosActionPerformed
        String sql = "SELECT * FROM vista_inventario_productos;";

        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Tienda");
        tm.addColumn("Producto");
        tm.addColumn("Cantidad");
        tm.addColumn("Precio");

        Object[] temp = new Object[4];
        Statement st;

        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                temp[1] = rs.getString(2);
                temp[2] = rs.getInt(3);
                temp[3] = rs.getDouble(4);
                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Inventario_de_ProductosActionPerformed

    private void jb_Compras_por_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Compras_por_ClienteActionPerformed
        String sql = "SELECT * FROM vista_compras_clientes;";

        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("ID");
        tm.addColumn("Nombre");
        tm.addColumn("Correo");
        tm.addColumn("Total");

        Object[] temp = new Object[4];
        Statement st;

        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getInt(1);
                temp[1] = rs.getString(2);
                temp[2] = rs.getString(3);
                temp[3] = rs.getDouble(4);
                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Compras_por_ClienteActionPerformed

    private void jb_Historial_de_Ventas_por_ClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Historial_de_Ventas_por_ClienteActionPerformed
        String sql = "SELECT * FROM vista_historial_ventas_tiendas;";
        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Tienda");
        tm.addColumn("Fecha");
        tm.addColumn("Total");

        Object[] temp = new Object[3];
        Statement st;

        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                temp[1] = rs.getString(2);
                temp[2] = rs.getDouble(3);

                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
     }//GEN-LAST:event_jb_Historial_de_Ventas_por_ClienteActionPerformed

    private void jb_Los_20_Productos_mas_Vendidos_en_cada_TiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Los_20_Productos_mas_Vendidos_en_cada_TiendaActionPerformed
        String sql = "SELECT * FROM vista_top_20_productos_tienda;";
        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Tienda");
        tm.addColumn("Producto");
        tm.addColumn("Total");

        Object[] temp = new Object[3];
        Statement st;

        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                temp[1] = rs.getString(2);
                temp[2] = rs.getDouble(3);

                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Los_20_Productos_mas_Vendidos_en_cada_TiendaActionPerformed

    private void jb_Los_20_Productos_mas_Vendidos_en_cada_PaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Los_20_Productos_mas_Vendidos_en_cada_PaisActionPerformed
        String sql = "SELECT * FROM vista_top_20_productos_pais;";
        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Pais");
        tm.addColumn("Producto");
        tm.addColumn("Total");
        Object[] temp = new Object[3];
        Statement st;
        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                temp[1] = rs.getString(2);
                temp[2] = rs.getDouble(3);

                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Los_20_Productos_mas_Vendidos_en_cada_PaisActionPerformed

    private void jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±oActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±oActionPerformed
        String sql = "SELECT * FROM vista_top_5_tiendas_anio;";
        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Tienda");
        tm.addColumn("Total");
        Object[] temp = new Object[2];
        Statement st;
        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                temp[1] = rs.getDouble(2);

                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±oActionPerformed

    private void jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_PepsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_PepsiActionPerformed
        String sql = "SELECT * FROM vista_tiendas_coca_colas_vs_pepsi;";
        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Tienda");
        Object[] temp = new Object[1];
        Statement st;
        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_PepsiActionPerformed

    private void jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_lecheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_lecheActionPerformed

        String sql = "SELECT * FROM vista_top_3_tipos_excluyendo_leche;";
        tm = new DefaultTableModel();
        TableRowSorter<TableModel> orden = new TableRowSorter<TableModel>(tm);
        jt_Vistas.setRowSorter(orden);
        tm.addColumn("Tipo");
        tm.addColumn("Total");
        Object[] temp = new Object[2];
        Statement st;
        try {
            ConectarDB con = new ConectarDB();
            st = con.conectar().createStatement();
            java.sql.ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                temp[0] = rs.getString(1);
                temp[1] = rs.getDouble(2);

                tm.addRow(temp);
            }
            jt_Vistas.setModel(tm);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_lecheActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jd_Vistas.setVisible(false);
        jd_admin.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jd_admin.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (clienteCheck) {
            jd_client.setVisible(false);
            this.setVisible(true);
        } else {
            jd_client.setVisible(false);
            jd_admin.setVisible(true);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bt_bitacoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_bitacoraActionPerformed
        bit = bitdao.ListarBitacora();
        if (!bit.isEmpty()) {
            DefaultTableModel tmbit = new DefaultTableModel();
            tmbit = new DefaultTableModel();
            tmbit.addColumn("Id");
            tmbit.addColumn("Usuario");
            tmbit.addColumn("Operacion");
            tmbit.addColumn("Descripcion");
            tmbit.addColumn("Fecha");
            for (bitacora fi : bit) {
                Object[] temp = new Object[5];
                temp[0] = fi.getIdbitacora();
                temp[1] = fi.getUsuario();
                temp[2] = fi.getOperacion();
                temp[3] = fi.getDescripcion();
                temp[4] = fi.getFecha();
                tmbit.addRow(temp);
            }
            jt_bitacora.setModel(tmbit);
        }
        jd_bitacora.setModal(true);
        jd_bitacora.pack();
        jd_bitacora.setLocationRelativeTo(this);
        jd_bitacora.setVisible(true);

    }//GEN-LAST:event_bt_bitacoraActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jd_bitacora.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bt_bitacoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_bitacoraMouseClicked

    }//GEN-LAST:event_bt_bitacoraMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_bitacora;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jb_ACliente3;
    private javax.swing.JButton jb_AEliminar;
    private javax.swing.JButton jb_AInsertar;
    private javax.swing.JButton jb_AModificar;
    private javax.swing.JButton jb_Compras_por_Cliente;
    private javax.swing.JButton jb_CrMoEl;
    private javax.swing.JButton jb_Historial_de_Ventas_por_Cliente;
    private javax.swing.JButton jb_Inventario_de_Productos;
    private javax.swing.JButton jb_Las_5_Tiendas_con_mas_ventas_en_lo_que_va_de_a√±o;
    private javax.swing.JButton jb_Las_Tiendas_que_vende_Coco_Cola_mas_que_Pepsi;
    private javax.swing.JButton jb_Los_20_Productos_mas_Vendidos_en_cada_Pais;
    private javax.swing.JButton jb_Los_20_Productos_mas_Vendidos_en_cada_Tienda;
    private javax.swing.JButton jb_Los_3_principales_tipos_de_producto_que_los_clientes_compran_ademas_de_la_leche;
    private javax.swing.JButton jb_Vistas;
    private javax.swing.JDialog jd_CrMoEl;
    private javax.swing.JDialog jd_Vistas;
    private javax.swing.JDialog jd_admin;
    private javax.swing.JDialog jd_bitacora;
    private javax.swing.JDialog jd_client;
    private javax.swing.JLabel jl_cl;
    private javax.swing.JLabel jl_com;
    private javax.swing.JLabel jl_comprar;
    private javax.swing.JLabel jl_tie;
    private javax.swing.JLabel jl_ven;
    private javax.swing.JPanel jp_CrMoEl;
    private javax.swing.JPanel jp_cl;
    private javax.swing.JPanel jp_com;
    private javax.swing.JPanel jp_comprar;
    private javax.swing.JPanel jp_tie;
    private javax.swing.JPanel jp_ven;
    private javax.swing.JPasswordField jpf_password;
    private javax.swing.JTable jt_AMostrar;
    private javax.swing.JTable jt_AMostrar1;
    private javax.swing.JTable jt_Vistas;
    private javax.swing.JTable jt_bitacora;
    private javax.swing.JTextField jtf_nombreCorreo;
    // End of variables declaration//GEN-END:variables
    int crud = -1, crud2 = -1, counter = 0;
    DefaultTableModel tm = new DefaultTableModel();
    boolean botonA = false;
    CLIENTESdao cd = new CLIENTESdao();
    VENDEDORdao vd = new VENDEDORdao();
    TIENDAdao td = new TIENDAdao();
    PRODUCTOdao pd = new PRODUCTOdao();
    bitacoradao bitdao = new bitacoradao();
    VENDEDOR_PRODUCTOdao vpd = new VENDEDOR_PRODUCTOdao();
    ArrayList<bitacora> bit = new ArrayList();
    ArrayList<CLIENTE> listaC = new ArrayList();
    ArrayList<VENDEDOR> listaV = new ArrayList();
    ArrayList<TIENDA> listaT = new ArrayList();
    ArrayList<PRODUCTO> listaP = new ArrayList();
    ArrayList<PRODUCTO> listaPC = new ArrayList();
    ArrayList<VENDEDOR_PRODUCTO> listaVP = new ArrayList();
    boolean clienteCheck, vendedorCheck;
}
